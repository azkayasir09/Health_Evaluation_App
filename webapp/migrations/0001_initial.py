# Generated by Django 5.1.2 on 2024-11-27 04:38

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('desc', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50, null=True)),
                ('password', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.IntegerField(default=30)),
                ('sex', models.IntegerField(choices=[(0, 'Female'), (1, 'Male')])),
                ('chest_pain_type', models.IntegerField(choices=[(0, 'ATA'), (1, 'NAP'), (2, 'ASY'), (3, 'TA')])),
                ('resting_ecg', models.IntegerField(choices=[(0, 'Normal'), (1, 'ST'), (2, 'LVH')])),
                ('exercise_angina', models.IntegerField(choices=[(0, 'Yes'), (1, 'No')])),
                ('st_slope', models.IntegerField(choices=[(0, 'Up'), (1, 'Flat'), (2, 'Down')])),
                ('fasting_bs', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')], default=0)),
                ('oldpeak', models.FloatField(validators=[django.core.validators.MinValueValidator(-2.6), django.core.validators.MaxValueValidator(6.2)])),
                ('max_heart_rate', models.IntegerField(validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(202)])),
                ('prediction_result', models.IntegerField(choices=[(0, 'No Heart Disease'), (1, 'Heart Disease')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=122)),
                ('last_name', models.CharField(max_length=122)),
                ('email', models.CharField(max_length=122)),
                ('password', models.CharField(max_length=122)),
                ('confirm_password', models.CharField(max_length=122)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
            },
        ),
    ]
